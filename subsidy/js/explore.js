// Generated by LiveScript 1.3.0
(function(){
  var preset, presetName, election, party, mark;
  preset = datasrc.suggest.map(function(d, i){
    return d.list.map(function(it){
      return [it.name, it.election, it.party, it.money];
    });
  });
  presetName = datasrc.suggest.map(function(it){
    return it.name;
  });
  election = ["第09任總統(副總統)選舉", "第10任總統(副總統)選舉", "第11任總統(副總統)選舉", "第12任總統(副總統)選舉", "第13任總統(副總統)選舉", "第14任總統(副總統)選舉", "第 03 屆立法委員選舉", "第 04 屆立法委員選舉", "第 05 屆立法委員選舉", "第 06 屆立法委員選舉", "第 07 屆立法委員選舉", "第 08 屆立法委員選舉", "第 09 屆立法委員選舉", "第7屆立委補選", "第8屆立委補選", "第9屆立委補選", "第 03 屆國大代表選舉", "83年臺灣省長選舉", "103年縣市議員選舉", "107年縣市議員選舉", "87年縣市議員選舉", "91年縣市議員選舉", "94年縣市議員選舉", "98年縣市議員選舉", "83年臺灣省議員選舉", "90年縣市長選舉", "86年縣市長選舉", "98年縣市長選舉", "103年縣市長選舉", "107年縣市長選舉", "83年直轄市議員選舉", "87年直轄市議員選舉", "91年直轄市議員選舉", "95年直轄市議員選舉", "99年直轄市議員選舉", "103年直轄市市議員選舉", "107年直轄市市議員選舉", "107年直轄市長選舉", "99年直轄市長選舉", "103年直轄市長選舉", "91年直轄市長選舉", "87年直轄市長選舉", "95年直轄市長選舉", "83年直轄市長選舉", "107年直轄市區民代表選舉", "103年直轄市區民代表選舉", "107年直轄市區長選舉", "103年直轄市區長選舉", "107年鄉鎮市民代表選舉", "103年鄉鎮市民代表選舉", "99年鄉鎮市民代表選舉", "107年鄉鎮市長選舉", "103年鄉鎮市長選舉", "98年鄉鎮市長選舉", "94年鄉鎮市長選舉", "91年鄉鎮市長選舉", "87年鄉鎮市長選舉", "103年村里長選舉", "107年村里長選舉", "99年縣市村里長選舉"];
  party = ["中國國民黨", "連署", "民主進步黨", "新黨", "無黨籍及未經政黨推薦", "親民黨", "全國民主非政黨聯盟", "無", "勞動黨", "民主聯盟", "新國家連線", "建國黨", "中國青年黨", "綠色本土清新黨", "國家民主黨", "台灣團結聯盟", "台灣吾黨", "大中華統一陣線", "臺灣慧行志工黨", "綠黨", "無黨團結聯盟", "工教聯盟", "大道慈悲濟世黨", "公民黨", "客家黨", "制憲聯盟", "台灣農民黨", "紅黨", "第三社會黨", "世界和平黨", "民主自由黨", "洪運忠義黨", "健保免費連線", "中華台商愛國黨", "人民最大黨", "台灣主義黨", "台灣國民會議", "人民民主陣線", "中華民國臺灣基本法連線", "正黨", "時代力量", "民國黨", "綠黨社會民主黨聯盟", "中華統一促進黨", "樹黨", "軍公教聯盟黨", "台灣工黨", "自由台灣黨", "泛盟黨", "勞工黨", "大愛憲改聯盟", "台灣獨立黨", "信心希望聯盟", "和平鴿聯盟黨", "台灣未來黨", "中華民國機車黨", "社會福利黨", "全民的黨", "全民無黨聯盟", "聯合黨", "金門高粱黨", "先進黨", "台灣民族黨", "大道人民黨", "中華民族致公黨", "皇君人民政黨", "全民生活政策黨", "社會改革黨", "保護台灣大聯盟", "台灣國民黨", "教科文預算保障e聯盟", "中國忠義黨", "中國婦女黨", "中國民眾黨", "台灣建國聯盟", "華聲黨", "中華民主向日葵憲政改革聯盟", "臺灣建國黨", "社會民主黨", "基進黨", "臺灣人民共產黨", "愛心黨", "左翼聯盟", "中國民主進步黨", "新政世紀黨", "人民民主黨", "台灣整復師聯盟工黨", "青年陽光黨", "中華民國國政監督聯盟", "三等國民公義人權自救黨", "新華勞動黨", "中國生產黨", "中國台灣原住民黨", "台灣第一民族黨", "新生黨", "華裔和合黨", "臺灣前進黨", "天宙和平統一家庭黨", "中華文化民主黨", "中國國家社會主義勞工黨", "台灣進步黨", "經濟黨", "聾國黨", "全國人民黨", "世界大同黨", "農民黨", "正義聯盟", "台灣學習黨"];
  mark = {
    0: "kmt",
    2: "dpp",
    3: "np",
    5: "pfp",
    15: "tsu",
    40: "npp"
  };
  ldc.register('explore', ['ldcvmgr', 'loader', 'nav'], function(arg$){
    var ldcvmgr, loader, nav, ldld, lc, render, view;
    ldcvmgr = arg$.ldcvmgr, loader = arg$.loader, nav = arg$.nav;
    ldld = new ldLoader({
      className: "full ldld"
    });
    lc = {};
    render = function(){
      var list, res$, k;
      lc.hash = {};
      list = (lc.all || []).filter(function(it){
        if (lc.election != null && it[1] !== lc.election) {
          return false;
        }
        if (lc.party != null && it[2] !== lc.party) {
          return false;
        }
        return true;
      });
      list.map(function(it){
        var ref$, key$;
        return ((ref$ = lc.hash)[key$ = it[0]] || (ref$[key$] = [])).push(it);
      });
      res$ = [];
      for (k in lc.hash) {
        res$.push(k);
      }
      lc.names = res$;
      view.get('election-toggle').textContent = election[lc.election] != null ? election[lc.election] : "請選擇選舉名稱";
      view.get('party-toggle').textContent = party[lc.party] != null ? party[lc.party] : "請選擇政黨";
      view.render();
      return ldld.off();
    };
    ldc.action({
      preset: function(n){
        lc.election = undefined;
        lc.party = undefined;
        view.get('search').value = '';
        lc.all = preset[+n];
        render();
        return scrollto('#list', 150);
      },
      election: function(){
        return lda.ldcvmgr.get('choose-election').then(function(it){
          if (!(it != null)) {
            return lc.election = undefined;
          } else {
            return lc.election = +it;
          }
        }).then(function(){
          return render();
        });
      },
      party: function(){
        return lda.ldcvmgr.get('choose-party').then(function(it){
          if (!(it != null)) {
            return lc.party = undefined;
          } else {
            return lc.party = +it;
          }
        }).then(function(){
          return render();
        });
      }
    });
    return view = new ldView({
      root: "[ld-scope=explore]",
      action: {
        input: {
          search: debounce(function(arg$){
            var node;
            node = arg$.node;
            ldld.on();
            return debounce(100).then(function(){
              return ld$.fetch(siteroot + "assets/data/name/" + node.value.charAt(0) + ".json", {
                method: 'GET'
              }, {
                type: 'json'
              });
            }).then(function(list){
              lc.all = list.filter(function(it){
                return it[0].startsWith(node.value);
              });
              return render();
            })['catch'](function(){
              lc.all = [];
              return render();
            });
          })
        }
      },
      handler: {
        preset: {
          list: function(){
            return presetName;
          },
          handle: function(arg$){
            var node, data, idx;
            node = arg$.node, data = arg$.data, idx = arg$.idx;
            node.querySelector('[ld=name]').textContent = data;
            return node.addEventListener('click', function(){
              return lda.explore.preset(presetName.indexOf(data));
            });
          }
        },
        card: {
          list: function(){
            return (lc.names || []).map(function(it){
              return lc.hash[it];
            });
          },
          handle: function(arg$){
            var node, data, view;
            node = arg$.node, data = arg$.data;
            return view = new ldView({
              root: node,
              handler: {
                name: function(arg$){
                  var node;
                  node = arg$.node;
                  return node.textContent = data[0][0];
                },
                list: {
                  list: function(){
                    return data;
                  },
                  handle: function(arg$){
                    var node, d, view;
                    node = arg$.node, d = arg$.data;
                    return view = new ldView({
                      root: node,
                      handler: {
                        mark: function(arg$){
                          var node, m;
                          node = arg$.node;
                          m = mark[d[2]] || 'other';
                          return node.style.backgroundImage = "url(" + siteroot + "assets/img/party/ic_" + m + ".png)";
                        },
                        title: function(arg$){
                          var node;
                          node = arg$.node;
                          return node.textContent = election[d[1]];
                        },
                        amount: function(arg$){
                          var node;
                          node = arg$.node;
                          return node.textContent = numconvert.a2c(d[3], {
                            partial: ['億', '萬']
                          }) + "元";
                        }
                      }
                    });
                  }
                }
              }
            });
          }
        }
      }
    });
  });
  return ldc.app("explore");
})();